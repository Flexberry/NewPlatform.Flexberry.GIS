//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewPlatform.Flexberry.GIS
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// BackgroundLayer.
    /// </summary>
    // *** Start programmer edit section *** (BackgroundLayer CustomAttributes)

    // *** End programmer edit section *** (BackgroundLayer CustomAttributes)
    [AutoAltered()]
    [Caption("Background layer")]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Name as \'Наименование\'",
            "Creator as \'Создатель\'",
            "CreateTime as \'Время создания\'",
            "Editor as \'Редактор\'",
            "EditTime as \'Время редактирования\'"})]
    [View("BackgroundLayerD", new string[] {
            "Name",
            "Description",
            "KeyWords",
            "AnyText",
            "Index",
            "Visibility",
            "Type",
            "Settings",
            "Scale",
            "CoordinateReferenceSystem",
            "BoundingBox",
            "Public",
            "Owner",
            "SecurityKey"})]
    [View("BackgroundLayerE", new string[] {
            "Name as \'Наименование\'",
            "Description as \'Описание\'",
            "KeyWords as \'Ключевые слова\'",
            "Index as \'Индекс\'",
            "Visibility as \'Видимость\'",
            "Type as \'Тип\'",
            "Settings as \'Настройки\'",
            "Scale as \'Масштаб\'",
            "CoordinateReferenceSystem as \'Система координат\'",
            "BoundingBox as \'Граница\'",
            "SecurityKey"})]
    [View("BackgroundLayerL", new string[] {
            "Name as \'Наименование\'",
            "Description as \'Описание\'",
            "Type as \'Тип\'"})]
    public class BackgroundLayer : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private string fName;
        
        private string fDescription;
        
        private string fKeyWords;
        
        private int fIndex;
        
        private bool fVisibility = true;
        
        private string fType;
        
        private string fSettings;
        
        private int fScale;
        
        private string fCoordinateReferenceSystem;
        
        private Microsoft.Spatial.Geography fBoundingBox;
        
        private bool fPublic;
        
        private string fOwner;
        
        private string fSecurityKey;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        // *** Start programmer edit section *** (BackgroundLayer CustomMembers)

        // *** End programmer edit section *** (BackgroundLayer CustomMembers)

        
        /// <summary>
        /// Наименование слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Name CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Name CustomAttributes)
        [StrLen(255)]
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Name Get start)

                // *** End programmer edit section *** (BackgroundLayer.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (BackgroundLayer.Name Get end)

                // *** End programmer edit section *** (BackgroundLayer.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Name Set start)

                // *** End programmer edit section *** (BackgroundLayer.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (BackgroundLayer.Name Set end)

                // *** End programmer edit section *** (BackgroundLayer.Name Set end)
            }
        }
        
        /// <summary>
        /// Описание слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Description CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Description CustomAttributes)
        public virtual string Description
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Description Get start)

                // *** End programmer edit section *** (BackgroundLayer.Description Get start)
                string result = this.fDescription;
                // *** Start programmer edit section *** (BackgroundLayer.Description Get end)

                // *** End programmer edit section *** (BackgroundLayer.Description Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Description Set start)

                // *** End programmer edit section *** (BackgroundLayer.Description Set start)
                this.fDescription = value;
                // *** Start programmer edit section *** (BackgroundLayer.Description Set end)

                // *** End programmer edit section *** (BackgroundLayer.Description Set end)
            }
        }
        
        /// <summary>
        /// Ключевые слова имеющие отношение к слою и его тематике.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.KeyWords CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.KeyWords CustomAttributes)
        public virtual string KeyWords
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.KeyWords Get start)

                // *** End programmer edit section *** (BackgroundLayer.KeyWords Get start)
                string result = this.fKeyWords;
                // *** Start programmer edit section *** (BackgroundLayer.KeyWords Get end)

                // *** End programmer edit section *** (BackgroundLayer.KeyWords Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.KeyWords Set start)

                // *** End programmer edit section *** (BackgroundLayer.KeyWords Set start)
                this.fKeyWords = value;
                // *** Start programmer edit section *** (BackgroundLayer.KeyWords Set end)

                // *** End programmer edit section *** (BackgroundLayer.KeyWords Set end)
            }
        }
        
        /// <summary>
        /// Вычислимое поле для полнотекстового поиска ключевым словам, наименованию и описанию карты.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.AnyText CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.AnyText CustomAttributes)
        [ICSSoft.STORMNET.NotStored()]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.MSSQLDataService), "ISNULL(@Name@, \'\') + \' \' + ISNULL(@Description@, \'\') + \' \' + REPLACE(ISNULL(@KeyW" +
            "ords@, \'\'), \',\', \' \')")]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.PostgresDataService), "COALESCE(@Name@, \'\') || \' \' || COALESCE(@Description@, \'\') || \' \' || REPLACE(COAL" +
            "ESCE(@KeyWords@, \'\'), \',\', \' \')")]
        [DataServiceExpression(typeof(ICSSoft.STORMNET.Business.SQLDataService), "ISNULL(@Name@, \'\') + \' \' + ISNULL(@Description@, \'\') + \' \' + REPLACE(ISNULL(@KeyW" +
            "ords@, \'\'), \',\', \' \')")]
        public virtual string AnyText
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.AnyText Get)

                return null;
                // *** End programmer edit section *** (BackgroundLayer.AnyText Get)
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.AnyText Set)

                // *** End programmer edit section *** (BackgroundLayer.AnyText Set)
            }
        }
        
        /// <summary>
        /// Место слоя в иерархии (по сути z-index).
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Index CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Index CustomAttributes)
        public virtual int Index
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Index Get start)

                // *** End programmer edit section *** (BackgroundLayer.Index Get start)
                int result = this.fIndex;
                // *** Start programmer edit section *** (BackgroundLayer.Index Get end)

                // *** End programmer edit section *** (BackgroundLayer.Index Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Index Set start)

                // *** End programmer edit section *** (BackgroundLayer.Index Set start)
                this.fIndex = value;
                // *** Start programmer edit section *** (BackgroundLayer.Index Set end)

                // *** End programmer edit section *** (BackgroundLayer.Index Set end)
            }
        }
        
        /// <summary>
        /// Видимость слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Visibility CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Visibility CustomAttributes)
        public virtual bool Visibility
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Visibility Get start)

                // *** End programmer edit section *** (BackgroundLayer.Visibility Get start)
                bool result = this.fVisibility;
                // *** Start programmer edit section *** (BackgroundLayer.Visibility Get end)

                // *** End programmer edit section *** (BackgroundLayer.Visibility Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Visibility Set start)

                // *** End programmer edit section *** (BackgroundLayer.Visibility Set start)
                this.fVisibility = value;
                // *** Start programmer edit section *** (BackgroundLayer.Visibility Set end)

                // *** End programmer edit section *** (BackgroundLayer.Visibility Set end)
            }
        }
        
        /// <summary>
        /// Тип слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Type CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Type CustomAttributes)
        [StrLen(255)]
        public virtual string Type
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Type Get start)

                // *** End programmer edit section *** (BackgroundLayer.Type Get start)
                string result = this.fType;
                // *** Start programmer edit section *** (BackgroundLayer.Type Get end)

                // *** End programmer edit section *** (BackgroundLayer.Type Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Type Set start)

                // *** End programmer edit section *** (BackgroundLayer.Type Set start)
                this.fType = value;
                // *** Start programmer edit section *** (BackgroundLayer.Type Set end)

                // *** End programmer edit section *** (BackgroundLayer.Type Set end)
            }
        }
        
        /// <summary>
        /// Настройки слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Settings CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Settings CustomAttributes)
        public virtual string Settings
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Settings Get start)

                // *** End programmer edit section *** (BackgroundLayer.Settings Get start)
                string result = this.fSettings;
                // *** Start programmer edit section *** (BackgroundLayer.Settings Get end)

                // *** End programmer edit section *** (BackgroundLayer.Settings Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Settings Set start)

                // *** End programmer edit section *** (BackgroundLayer.Settings Set start)
                this.fSettings = value;
                // *** Start programmer edit section *** (BackgroundLayer.Settings Set end)

                // *** End programmer edit section *** (BackgroundLayer.Settings Set end)
            }
        }
        
        /// <summary>
        /// Масштаб или точность данных слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Scale CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Scale CustomAttributes)
        public virtual int Scale
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Scale Get start)

                // *** End programmer edit section *** (BackgroundLayer.Scale Get start)
                int result = this.fScale;
                // *** Start programmer edit section *** (BackgroundLayer.Scale Get end)

                // *** End programmer edit section *** (BackgroundLayer.Scale Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Scale Set start)

                // *** End programmer edit section *** (BackgroundLayer.Scale Set start)
                this.fScale = value;
                // *** Start programmer edit section *** (BackgroundLayer.Scale Set end)

                // *** End programmer edit section *** (BackgroundLayer.Scale Set end)
            }
        }
        
        /// <summary>
        /// Система координат слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem CustomAttributes)
        [StrLen(255)]
        public virtual string CoordinateReferenceSystem
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Get start)

                // *** End programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Get start)
                string result = this.fCoordinateReferenceSystem;
                // *** Start programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Get end)

                // *** End programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Set start)

                // *** End programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Set start)
                this.fCoordinateReferenceSystem = value;
                // *** Start programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Set end)

                // *** End programmer edit section *** (BackgroundLayer.CoordinateReferenceSystem Set end)
            }
        }
        
        /// <summary>
        /// Границы слоя.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.BoundingBox CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.BoundingBox CustomAttributes)
        public virtual Microsoft.Spatial.Geography BoundingBox
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.BoundingBox Get start)

                // *** End programmer edit section *** (BackgroundLayer.BoundingBox Get start)
                Microsoft.Spatial.Geography result = this.fBoundingBox;
                // *** Start programmer edit section *** (BackgroundLayer.BoundingBox Get end)

                // *** End programmer edit section *** (BackgroundLayer.BoundingBox Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.BoundingBox Set start)

                // *** End programmer edit section *** (BackgroundLayer.BoundingBox Set start)
                this.fBoundingBox = value;
                // *** Start programmer edit section *** (BackgroundLayer.BoundingBox Set end)

                // *** End programmer edit section *** (BackgroundLayer.BoundingBox Set end)
            }
        }
        
        /// <summary>
        /// Public.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Public CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Public CustomAttributes)
        public virtual bool Public
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Public Get start)

                // *** End programmer edit section *** (BackgroundLayer.Public Get start)
                bool result = this.fPublic;
                // *** Start programmer edit section *** (BackgroundLayer.Public Get end)

                // *** End programmer edit section *** (BackgroundLayer.Public Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Public Set start)

                // *** End programmer edit section *** (BackgroundLayer.Public Set start)
                this.fPublic = value;
                // *** Start programmer edit section *** (BackgroundLayer.Public Set end)

                // *** End programmer edit section *** (BackgroundLayer.Public Set end)
            }
        }
        
        /// <summary>
        /// Owner.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Owner CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Owner CustomAttributes)
        [StrLen(255)]
        public virtual string Owner
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Owner Get start)

                // *** End programmer edit section *** (BackgroundLayer.Owner Get start)
                string result = this.fOwner;
                // *** Start programmer edit section *** (BackgroundLayer.Owner Get end)

                // *** End programmer edit section *** (BackgroundLayer.Owner Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Owner Set start)

                // *** End programmer edit section *** (BackgroundLayer.Owner Set start)
                this.fOwner = value;
                // *** Start programmer edit section *** (BackgroundLayer.Owner Set end)

                // *** End programmer edit section *** (BackgroundLayer.Owner Set end)
            }
        }
        
        /// <summary>
        /// SecurityKey.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.SecurityKey CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.SecurityKey CustomAttributes)
        [StrLen(255)]
        public virtual string SecurityKey
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.SecurityKey Get start)

                // *** End programmer edit section *** (BackgroundLayer.SecurityKey Get start)
                string result = this.fSecurityKey;
                // *** Start programmer edit section *** (BackgroundLayer.SecurityKey Get end)

                // *** End programmer edit section *** (BackgroundLayer.SecurityKey Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.SecurityKey Set start)

                // *** End programmer edit section *** (BackgroundLayer.SecurityKey Set start)
                this.fSecurityKey = value;
                // *** Start programmer edit section *** (BackgroundLayer.SecurityKey Set end)

                // *** End programmer edit section *** (BackgroundLayer.SecurityKey Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.CreateTime CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.CreateTime Get start)

                // *** End programmer edit section *** (BackgroundLayer.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (BackgroundLayer.CreateTime Get end)

                // *** End programmer edit section *** (BackgroundLayer.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.CreateTime Set start)

                // *** End programmer edit section *** (BackgroundLayer.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (BackgroundLayer.CreateTime Set end)

                // *** End programmer edit section *** (BackgroundLayer.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Creator CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Creator Get start)

                // *** End programmer edit section *** (BackgroundLayer.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (BackgroundLayer.Creator Get end)

                // *** End programmer edit section *** (BackgroundLayer.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Creator Set start)

                // *** End programmer edit section *** (BackgroundLayer.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (BackgroundLayer.Creator Set end)

                // *** End programmer edit section *** (BackgroundLayer.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.EditTime CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.EditTime Get start)

                // *** End programmer edit section *** (BackgroundLayer.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (BackgroundLayer.EditTime Get end)

                // *** End programmer edit section *** (BackgroundLayer.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.EditTime Set start)

                // *** End programmer edit section *** (BackgroundLayer.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (BackgroundLayer.EditTime Set end)

                // *** End programmer edit section *** (BackgroundLayer.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (BackgroundLayer.Editor CustomAttributes)

        // *** End programmer edit section *** (BackgroundLayer.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (BackgroundLayer.Editor Get start)

                // *** End programmer edit section *** (BackgroundLayer.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (BackgroundLayer.Editor Get end)

                // *** End programmer edit section *** (BackgroundLayer.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (BackgroundLayer.Editor Set start)

                // *** End programmer edit section *** (BackgroundLayer.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (BackgroundLayer.Editor Set end)

                // *** End programmer edit section *** (BackgroundLayer.Editor Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// Представление для аудита.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(NewPlatform.Flexberry.GIS.BackgroundLayer));
                }
            }
            
            /// <summary>
            /// Представление для форм редактирования агрегатора.
            /// </summary>
            public static ICSSoft.STORMNET.View BackgroundLayerD
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("BackgroundLayerD", typeof(NewPlatform.Flexberry.GIS.BackgroundLayer));
                }
            }
            
            /// <summary>
            /// Представление для форм редактирования.
            /// </summary>
            public static ICSSoft.STORMNET.View BackgroundLayerE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("BackgroundLayerE", typeof(NewPlatform.Flexberry.GIS.BackgroundLayer));
                }
            }
            
            /// <summary>
            /// Представление для списковых форм.
            /// </summary>
            public static ICSSoft.STORMNET.View BackgroundLayerL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("BackgroundLayerL", typeof(NewPlatform.Flexberry.GIS.BackgroundLayer));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
